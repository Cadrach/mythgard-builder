<?php

use App\Models\Faction;
use Illuminate\Database\Seeder;
use \App\Models\Card;
use \App\Models\Helper;

class CardsTableSeeder extends Seeder
{

    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        $file = database_path('seeds/mythgard-0.17.2.json');
        $json = json_decode(file_get_contents($file));

        $idsFix = [239 => 229,
            240 => 230,
            320 => 308,
            184 => 176,
            281 => 267,
            270 => 260,
            58 => 61,
            153 => 144,
            154 => 145,
            342 => 330,
            254 => 244,
            358 => 342,
            241 => 231,
            387 => 372,
            410 => 394,
            388 => 373,
            255 => 245,
            419 => 146,
            359 => 343,
            81 => 76,
            343 => 331,
            82 => 77,
            242 => 232,
            264 => 254,
            9 => 9,
            111 => 109,
            24 => 25,
            53 => 55,
            164 => 156,
            97 => 93,
            155 => 147,
            122 => 120,
            256 => 246,
            222 => 211,
            257 => 247,
            223 => 212,
            40 => 42,
            25 => 26,
            204 => 406,
            10 => 10,
            41 => 43,
            11 => 11,
            134 => 397,
            1 => 1,
            165 => 157,
            422 => 398,
            143 => 134,
            59 => 62,
            331 => 319,
            405 => 389,
            199 => 194,
            185 => 177,
            274 => 264,
            224 => 213,
            73 => 68,
            389 => 374,
            98 => 94,
            420 => 178,
            348 => 332,
            282 => 268,
            112 => 110,
            360 => 344,
            166 => 158,
            186 => 179,
            338 => 326,
            411 => 395,
            156 => 148,
            289 => 275,
            167 => 159,
            26 => 27,
            157 => 149,
            390 => 375,
            361 => 345,
            12 => 12,
            304 => 291,
            225 => 214,
            332 => 320,
            305 => 292,
            207 => 407,
            210 => 199,
            226 => 215,
            158 => 150,
            433 => 56,
            13 => 13,
            99 => 95,
            283 => 269,
            306 => 293,
            193 => 187,
            290 => 276,
            284 => 270,
            27 => 28,
            28 => 29,
            14 => 14,
            15 => 15,
            135 => 408,
            391 => 376,
            113 => 111,
            29 => 30,
            194 => 188,
            142 => 133,
            339 => 327,
            16 => 16,
            417 => 409,
            279 => 411,
            187 => 180,
            114 => 112,
            392 => 377,
            2 => 2,
            3 => 3,
            203 => 399,
            83 => 78,
            159 => 151,
            362 => 346,
            115 => 113,
            258 => 248,
            30 => 31,
            160 => 152,
            421 => 32,
            74 => 69,
            168 => 160,
            4 => 4,
            31 => 33,
            227 => 216,
            259 => 249,
            228 => 217,
            84 => 79,
            100 => 96,
            243 => 233,
            363 => 347,
            291 => 277,
            54 => 57,
            195 => 189,
            406 => 390,
            129 => 127,
            32 => 34,
            85 => 80,
            75 => 70,
            116 => 114,
            401 => 385,
            5 => 5,
            169 => 161,
            211 => 200,
            229 => 218,
            307 => 294,
            130 => 128,
            136 => 412,
            170 => 162,
            86 => 81,
            418 => 421,
            346 => 416,
            347 => 413,
            345 => 419,
            344 => 420,
            372 => 356,
            6 => 6,
            244 => 234,
            373 => 357,
            212 => 201,
            188 => 181,
            393 => 378,
            60 => 63,
            144 => 135,
            17 => 17,
            171 => 163,
            145 => 136,
            436 => 265,
            374 => 358,
            308 => 295,
            101 => 97,
            275 => 266,
            62 => 65,
            364 => 348,
            309 => 296,
            172 => 164,
            146 => 137,
            245 => 235,
            415 => 400,
            349 => 333,
            7 => 7,
            407 => 391,
            18 => 18,
            55 => 58,
            350 => 334,
            42 => 44,
            43 => 45,
            375 => 359,
            365 => 349,
            265 => 255,
            340 => 328,
            173 => 165,
            292 => 278,
            408 => 392,
            87 => 82,
            341 => 329,
            246 => 236,
            247 => 237,
            366 => 350,
            64 => 67,
            413 => 401,
            33 => 35,
            200 => 195,
            19 => 19,
            34 => 36,
            196 => 190,
            56 => 59,
            76 => 71,
            117 => 115,
            123 => 121,
            102 => 98,
            293 => 279,
            205 => 417,
            213 => 202,
            333 => 321,
            394 => 379,
            230 => 219,
            231 => 220,
            77 => 72,
            197 => 191,
            174 => 166,
            103 => 99,
            124 => 122,
            351 => 335,
            147 => 138,
            294 => 280,
            310 => 297,
            125 => 123,
            395 => 360,
            201 => 197,
            161 => 153,
            118 => 116,
            214 => 203,
            376 => 361,
            78 => 73,
            377 => 362,
            248 => 238,
            378 => 363,
            396 => 380,
            432 => 20,
            437 => 281,
            79 => 74,
            44 => 46,
            321 => 309,
            119 => 117,
            104 => 100,
            148 => 139,
            175 => 167,
            215 => 204,
            88 => 83,
            216 => 205,
            89 => 84,
            176 => 168,
            311 => 298,
            295 => 282,
            322 => 310,
            323 => 311,
            312 => 299,
            367 => 351,
            380 => 364,
            412 => 396,
            324 => 312,
            266 => 256,
            177 => 169,
            277 => 414,
            352 => 336,
            105 => 101,
            423 => 402,
            402 => 386,
            296 => 283,
            353 => 337,
            313 => 300,
            232 => 221,
            267 => 257,
            20 => 21,
            325 => 313,
            368 => 352,
            162 => 154,
            178 => 170,
            369 => 353,
            409 => 393,
            314 => 301,
            126 => 124,
            278 => 415,
            217 => 206,
            45 => 47,
            90 => 85,
            35 => 37,
            381 => 365,
            21 => 22,
            46 => 48,
            218 => 207,
            271 => 261,
            120 => 118,
            424 => 302,
            233 => 222,
            297 => 284,
            334 => 322,
            298 => 285,
            133 => 131,
            335 => 323,
            326 => 314,
            425 => 86,
            189 => 182,
            179 => 171,
            36 => 38,
            327 => 315,
            106 => 102,
            426 => 192,
            315 => 303,
            249 => 239,
            107 => 103,
            434 => 104,
            202 => 198,
            316 => 304,
            149 => 140,
            382 => 366,
            383 => 367,
            384 => 368,
            180 => 172,
            260 => 250,
            435 => 196,
            328 => 316,
            250 => 240,
            354 => 338,
            8 => 8,
            37 => 39,
            355 => 339,
            336 => 324,
            317 => 305,
            22 => 23,
            268 => 258,
            299 => 286,
            234 => 223,
            403 => 387,
            427 => 224,
            397 => 381,
            108 => 105,
            428 => 403,
            198 => 193,
            356 => 340,
            38 => 40,
            285 => 271,
            39 => 41,
            385 => 369,
            150 => 141,
            181 => 173,
            151 => 142,
            163 => 155,
            190 => 183,
            91 => 87,
            386 => 370,
            235 => 225,
            219 => 208,
            370 => 354,
            236 => 226,
            47 => 49,
            429 => 132,
            191 => 184,
            329 => 317,
            182 => 174,
            404 => 388,
            416 => 418,
            261 => 251,
            48 => 50,
            430 => 185,
            276 => 404,
            183 => 175,
            286 => 272,
            398 => 382,
            49 => 51,
            50 => 52,
            337 => 325,
            357 => 341,
            206 => 405,
            272 => 262,
            330 => 318,
            61 => 64,
            237 => 227,
            131 => 129,
            132 => 130,
            300 => 287,
            57 => 60,
            127 => 125,
            51 => 53,
            23 => 24,
            238 => 228,
            251 => 241,
            318 => 306,
            92 => 88,
            80 => 75,
            93 => 89,
            109 => 106,
            273 => 263,
            301 => 288,
            220 => 209,
            63 => 66,
            94 => 90,
            269 => 259,
            252 => 242,
            253 => 243,
            152 => 143,
            221 => 210,
            399 => 383,
            414 => 410,
            262 => 252,
            121 => 119,
            400 => 384,
            192 => 186,
            52 => 54,
            110 => 107,
            431 => 108,
            302 => 289,
            287 => 273,
            303 => 290,
            288 => 274,
            319 => 307,
            95 => 91,
            96 => 92,
            371 => 355,
            379 => 371,
            263 => 253,
            128 => 126,
        ];

        if(json_last_error()){
            dd(json_last_error_msg());
        }

        $factions = Faction::all();
        $factionsByName = $factions->keyBy('fac_color_name')->toArray();
        $factionsById = $factions->keyBy('id')->toArray();

        //Default values
        $cards = [];

        //Fill rarities index with 0 for each rarity
        $rarityIndex = array_combine(Card::getConstants()['RARITY'], array_fill(0, count(Card::getConstants()['RARITY']), 0));
        $maxByRarityIndex = Card::getMaxByRarity();

        //Sort by rhino id to always create the cards in the same order
        $json = collect($json)->sortBy('cardid')->toArray();
        foreach($json as $card){
            $cleanedName = Helper::normalizeName($card->cardnameclean);
            $cards[] = [
                'id' => $idsFix[$card->cardid],
                'ide_faction' => $factionsByName[$card->faction]['id'],
                'card_rarity_index' => $rarityIndex[$card->rarity]++,
                'id_rhino' => $card->cardid,
                'card_name' => ucwords($card->cardname),
                'card_name_export' => $card->cardnameclean,
                'card_name_clean' => $cleanedName,
                'card_image' => "$cleanedName.png",
                'card_text' => $card->text,
                'card_text_flavor' => $card->flavor,
                'card_set' => $card->set,
                'card_type' => $card->type,
                'card_subtype' => $card->subtypes,
                'card_cost' => $card->cost,
                'card_gems' => $card->influence,
                'card_attack' => $card->attack,
                'card_health' => $card->health,
                'card_rarity' => $card->rarity,
                'card_max_in_deck' => $maxByRarityIndex[$card->rarity],
                'card_keywords' => !$card->keywords ? null : collect(explode(',', $card->keywords))->map(function($v){return trim($v);})->toJson(),
                'card_color_count' => count(array_unique(str_split($card->influence))),
            ];
        }

        //Now we will be sorting cards
        usort($cards, function($a, $b) use($factionsById){
            $order = ['ide_faction', 'card_cost',];
            $a['ide_faction'] = $a['card_color_count'] > 1 ? $a['card_cost']*100:$factionsById[$a['ide_faction']]['fac_order'];
            $b['ide_faction'] = $b['card_color_count'] > 1 ? $b['card_cost']*100:$factionsById[$b['ide_faction']]['fac_order'];
            $c = '';
            foreach($order as $key){
                $c.= str_pad($a[$key] - $b[$key], 10, '0', STR_PAD_LEFT);
            }
            $c.= strcmp($a['card_name'], $b['card_name']);
            return $c;
        });

        foreach($cards as $k=>$card){
            $cards[$k]['card_order'] = $k;
        }

        //Insert cards
        DB::table('cards')->truncate();
        DB::table('cards')->insert($cards);
    }
}
